apiVersion: v1
kind: Namespace
metadata:
  name: pihole

---
kind: Service
apiVersion: v1
metadata:
  name: piholeweb
  labels:
    app: pihole
    type: LoadBalancer
spec:
  type: LoadBalancer
  loadBalancerIP: 10.10.10.21
  ports:
  - name: web
    protocol: TCP
    port: 80
    targetPort: 80
  selector:
    app: pihole

---
kind: Service
apiVersion: v1
metadata:
  name: piholeudp
  labels:
    app: pihole
    type: LoadBalancer
spec:
  type: LoadBalancer
  externalTrafficPolicy: Local
  loadBalancerIP: 10.10.10.20
  ports:
  - name: dns
    protocol: UDP
    port: 53
    targetPort: 53
  selector:
    app: pihole

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pihole
  labels:
    app: pihole
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pihole
  template:
    metadata:
      labels:
        app: pihole
        name: pihole
    spec:
      containers:
      - name: pihole
        image: pihole/pihole:latest
        imagePullPolicy: IfNotPresent
        env:
        - name: DNS1
          value: 9.9.9.9
        - name: DNS2
          value: 149.112.112.112
        - name: TZ
          value: "TZ=Europe/Berlin"
        - name: WEBPASSWORD
          value: "secret"
        volumeMounts:
        - name: pihole-volume
          mountPath: "/etc/pihole"
        - name: dnsmasq-volume
          mountPath: "/etc/dnsmasq.d"
        ports:
          - name: dnstcp
            protocol: TCP
            containerPort: 53
          - name: dnsudp
            protocol: UDP
            containerPort: 53
          - name: web
            protocol: TCP
            containerPort: 80
      volumes:
      - name: pihole-volume
        emptyDir: {}
      - name: dnsmasq-volume
        emptyDir: {}
